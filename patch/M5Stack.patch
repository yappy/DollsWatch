diff --git a/src/LoRaWan.cpp b/src/LoRaWan.cpp
index 1778f77..2d4ef6c 100644
--- a/src/LoRaWan.cpp
+++ b/src/LoRaWan.cpp
@@ -167,6 +167,7 @@ bool LoRaWanClass::setDataRate(_data_rate_t dataRate, _physical_type_t physicalT
     loraDebugPrint(DEFAULT_DEBUGTIME);
 #endif
     delay(DEFAULT_TIMEWAIT);
+    return true;
 }
 
 void LoRaWanClass::setPower(short power)
@@ -444,6 +445,8 @@ short LoRaWanClass::receivePacket(char *buffer, short length, short *rssi)
                 tmp = temp[j] - 'A' + 10;
                 else if((temp[j] >= 'a') && (temp[j] <= 'f'))
                 tmp = temp[j] - 'a' + 10;
+                else
+                tmp = 0;
 
                 result = result * 16 + tmp;
             }
@@ -486,6 +489,8 @@ short LoRaWanClass::receivePacket(char *buffer, short length, short *rssi)
                 tmp = temp[j] - 'A' + 10;
                 else if((temp[j] >= 'a') && (temp[j] <= 'f'))
                 tmp = temp[j] - 'a' + 10;
+                else
+                tmp = 0;
 
                 result = result * 16 + tmp;
             }
@@ -871,6 +876,8 @@ short LoRaWanClass::receivePacketP2PMode(unsigned char *buffer, short length, sh
                 tmp = temp[j] - 'A' + 10;
                 else if((temp[j] >= 'a') && (temp[j] <= 'f'))
                 tmp = temp[j] - 'a' + 10;
+                else
+                tmp = 0;
 
                 result = result * 16 + tmp;
             }
@@ -985,7 +992,7 @@ short LoRaWanClass::readLine(char *buffer, short length, unsigned char timeout)
 {
     short i = 0;
     unsigned long timerStart, timerEnd;
-    char c;
+    char c = 0;
 
     timerStart = millis();
 
@@ -1041,4 +1048,4 @@ short LoRaWanClass::sendCommandAndWaitForResponse(char* command, char *response,
 }
 
 
-LoRaWanClass lora;
\ No newline at end of file
+LoRaWanClass lora;
